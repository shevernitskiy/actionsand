# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell

      - name: Hey
        id: files
        run: |
          pattern=(".fs" ".fsproj" "ewml")
          result=false
          prev_sha=$(git rev-parse --quiet --verify ${{ github.sha }}^)
          echo "=============================================================="
          echo "Barnch: ${{ github.ref_name }}"
          echo "Current sha: ${{ github.sha }}"
          echo "Previous sha: $prev_sha"
          echo "=============================================================="
          echo "List of diff flies files:"
          for file in $(git diff --name-only $prev_sha ${{ github.sha }}); do
            echo "🔸$file"
            array=("js" "ts" "yml")
            for element in "${pattern[@]}"
            do
              if [[ $file == *$element* ]]; then
                result=true
                echo "⚠️$file mathing $element"
              fi
            done
          done
          echo "result=$result" >> $GITHUB_ENV
          echo "::set-output name=result::$result"
          echo "=============================================================="
          echo "Result: $result"

      - name: Check
        run: |
          echo "Check ${{ env.result }}"
          echo "Check2 ${{ steps.files.outputs.result }}"
